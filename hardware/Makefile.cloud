############################################################################
############################################################################
##
## Copyright 2016,2017 International Business Machines
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE#2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions AND
## limitations under the License.
##
############################################################################
############################################################################

## variables required by other scripts
export SNAP_HARDWARE_ROOT=$(SNAP_ROOT)/hardware
export LOGS_DIR=$(SNAP_HARDWARE_ROOT)/logs

ifeq "$(FPGACARD)" "KU3"
	export DDR3_USED=$(SDRAM_USED)
	export DDR4_USED=FALSE
	export DDRI_USED=$(SDRAM_USED)
	export NVME_USED=FALSE
endif

ifeq "$(FPGACARD)" "FGT"
	export DDR3_USED=FALSE
	export DDR4_USED=$(SDRAM_USED)
	export DDRI_USED=$(SDRAM_USED)
endif


## variables only for this Makefile
BUILD_DIR=$(SNAP_HARDWARE_ROOT)/build
SNAP_HDL_CORE=$(SNAP_HARDWARE_ROOT)/hdl/core
SNAP_HDL_HLS=$(SNAP_HARDWARE_ROOT)/hdl/hls
SNAP_SIM_CORE=$(SNAP_HARDWARE_ROOT)/sim/core

.PHONY: all clean gitclean check_snap_settings setup_environment combine_dcps

all: combine_dcps

check_snap_settings:
	@if [ ! -d "$(SNAP_HARDWARE_ROOT)" ]; then \
		echo "SNAP_HARDWARE_ROOT does not point to a directory."; \
		echo "Please source snap_settings before calling make!"; \
		exit 1; \
	fi
	@if [ -z `which git 2> /dev/null` ]; then \
		echo "The SNAP framework make process relies on git."; \
		echo "Please make sure that you have installed git and that"; \
		echo "the environment variable PATH points to its executable."; \
		exit 1; \
	fi
	@cd $(SNAP_HARDWARE_ROOT); if [ -z `git describe HEAD 2> /dev/null` ]; then \
		echo "$(SNAP_HARDWARE_ROOT) (SNAP_HARDWARE_ROOT) does not belong to a git repository."; \
		echo "Please check out the SNAP framework as git clone from git@github.com:open-power/donut.git"; \
		exit 1; \
	fi
	@if [ -z $(FPGACARD) ] || [ -z $(DCP_ROOT) ]; then \
		echo "Missing one or more environment  variables"; \
		echo "Please check the following variables and source snap_settings before calling make!"; \
		echo "FPGACARD:       $(FPGACARD)"; \
		echo "DCP_ROOT:       $(DCP_ROOT)"; \
		exit 1; \
	fi



setup_environment: check_snap_settings
	@echo -e "\t[SETUP ENVIRONMENT...] start `date`";
	@mkdir -p $(BUILD_DIR);
	@mkdir -p $(LOGS_DIR);
	@mkdir -p $(BUILD_DIR)/Images;
	@echo -e "\t[SETUP ENVIRONMENT...] done `date`";


combine_dcps: setup_environment
	@echo -e "\t[COMBINING DCPS......] start `date`";
	@echo -e "\t                        using `vivado -version |grep Vivado`"
	@cd $(SNAP_HARDWARE_ROOT)/setup                                    && vivado -quiet -mode batch -source combine_dcps.tcl -notrace -log $(LOGS_DIR)/combine_dcps.log  -journal $(LOGS_DIR)/combine_dcps.jou
	@echo -e "\t[COMBINING DCPS......] done `date`"

clean:
	@echo -e "\t[CLEAN ENVIRONMENT...] start `date`";
	@rm -r -f  *build
	@echo -e "\t                        vivado project";
	@rm -r -f  viv_project*
	@echo -e "\t                        log files";
	@rm -r -f  logs
	@echo -e "\t[CLEAN ENVIRONMENT...] done `date`";

gitclean:
	@echo -e "\t[GITCLEAN............] cleaning and resetting snap git";
	git clean -f -d -x
	git reset --hard
